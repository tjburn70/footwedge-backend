service: footwedge-api
app: footwedge

frameworkVersion: '2'

plugins:
  - serverless-python-requirements
  - serverless-functions-base-path
  - serverless-domain-manager

custom:
  functionsBasePath: src/
  tableName: 'footwedge-table-${self:provider.stage}'
  customDomain:
    domainName: api.footwedge.io
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateName: '*.footwedge.io'
  pythonRequirements:
    dockerizePip: non-linux

package:
  patterns:
    - '!test/**'

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-2
  memorySize: 1024
  lambdaHashingVersion: 20201221
  iam:
    role:
      name: footwedge_api_lambda
      path: /
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": [ "FootwedgeDynamoDBTable", "Arn" ] }
        - Effect: Allow
          Action:
            - execute-api:Invoke
            - execute-api:ManageConnections
          Resource:
            - arn:aws:execute-api:*:*:*
  environment:
    PYTHONPATH: src
  httpApi:
    payload: '2.0'

functions:
  footwedgeApi:
    handler: handler.lambda_handler
    events:
      - httpApi: '*'
    environment:
      COGNITO_REGION: !Sub ${AWS::Region}
      COGNITO_USER_POOL_ID: us-east-2_9tqIkGeQX
      COGNITO_WEB_CLIENT_ID: 24vuoscdcg85drk6c3bubtva2h
      DYNAMO_DB_URL: !Sub https://dynamodb.${AWS::Region}.amazonaws.com
      FOOTWEDGE_DYNAMO_TABLE: ${self:custom.tableName}

resources:
  Resources:
    FootwedgeDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          -
            AttributeName: pk
            KeyType: HASH
          -
            AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_IMAGE"
        TableName: ${self:custom.tableName}
